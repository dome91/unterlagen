package templates

import "fmt"

type ErrorType string

const (
	ErrorTypeGeneral    ErrorType = "general"
	ErrorTypePermission ErrorType = "permission"
	ErrorTypeNotFound   ErrorType = "not_found"
	ErrorTypeServer     ErrorType = "server"
)

type ErrorData struct {
	Type        ErrorType
	Title       string
	Description string
	Code        int
	RequestID   string
	ContactInfo string
}

// Error renders a generic error page with customizable content
templ Error(data ErrorData) {
	@authenticatedLayout(nil, PageError) {
		<div class="hero min-h-[70vh]">
			<div class="hero-content text-center">
				<div class="max-w-md">
					<div class="mb-8">
						@errorIcon(data.Type)
					</div>
					<h1 class="text-3xl font-bold mb-2">{ data.Title }</h1>
					<p class="mb-6">{ data.Description }</p>
					if data.Code > 0 {
						<div class="badge badge-neutral mb-4">Error { fmt.Sprintf("%d", data.Code) }</div>
					}
					if data.RequestID != "" {
						<div class="text-sm opacity-60 mb-2">
							Request ID: <span class="font-mono">{ data.RequestID }</span>
						</div>
					}
					if data.ContactInfo != "" {
						<div class="text-sm mb-6">
							{ data.ContactInfo }
						</div>
					}
					<div class="flex gap-4 justify-center">
						<a href="/" class="btn btn-primary">Go Home</a>
						<button onclick="window.history.back()" class="btn btn-outline">Go Back</button>
					</div>
				</div>
			</div>
		</div>
	}
}

// ErrorGeneral renders a generic error page
templ ErrorGeneral(title, description string) {
	@Error(ErrorData{
		Type:        ErrorTypeGeneral,
		Title:       title,
		Description: description,
		ContactInfo: "If this problem persists, please contact support.",
	})
}

// ErrorNotFound renders a 404 not found error page
templ ErrorNotFound() {
	@Error(ErrorData{
		Type:        ErrorTypeNotFound,
		Title:       "Page Not Found",
		Description: "We couldn't find the page you're looking for.",
		Code:        404,
	})
}

// ErrorPermission renders a 403 permission denied error page
templ ErrorPermission() {
	@Error(ErrorData{
		Type:        ErrorTypePermission,
		Title:       "Access Denied",
		Description: "You don't have permission to access this resource.",
		Code:        403,
		ContactInfo: "If you believe this is an error, please contact your administrator.",
	})
}

// ErrorServer renders a 500 server error page
templ ErrorServer(requestID string) {
	@Error(ErrorData{
		Type:        ErrorTypeServer,
		Title:       "Oops! Something went wrong",
		Description: "We're experiencing some technical difficulties. Please try again later.",
		Code:        500,
		RequestID:   requestID,
		ContactInfo: "If this problem persists, please contact support with the request ID.",
	})
}

templ errorIcon(errorType ErrorType) {
	switch errorType {
		case ErrorTypePermission:
			<div class="text-error">
				<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-24 h-24 mx-auto">
					<path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m0-10.036A11.959 11.959 0 0 1 3.598 6 11.99 11.99 0 0 0 3 9.75c0 5.592 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.31-.21-2.57-.598-3.75h-.152c-3.196 0-6.1-1.249-8.25-3.286Z"></path>
				</svg>
			</div>
		case ErrorTypeNotFound:
			<div class="text-warning">
				<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-24 h-24 mx-auto">
					<path stroke-linecap="round" stroke-linejoin="round" d="m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z"></path>
				</svg>
			</div>
		case ErrorTypeServer:
			<div class="text-error">
				<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-24 h-24 mx-auto">
					<path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126ZM12 15.75h.007v.008H12v-.008Z"></path>
				</svg>
			</div>
		default:
			<div class="text-info">
				<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-24 h-24 mx-auto">
					<path stroke-linecap="round" stroke-linejoin="round" d="m11.25 11.25.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Zm-9-3.75h.008v.008H12V8.25Z"></path>
				</svg>
			</div>
	}
}
